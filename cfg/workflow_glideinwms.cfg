# main config lists section to get personalty from
[default]
workflow                 = ${TEST_WORKFLOW:-TEST_CI_MRB}
notify_email_to          = vito@fnal.gov
notify_succeded_email_to =
notify_failed_email_to   =
notify_success           = new
notify_blame             = false
build_db_uri             = http://dbweb6.fnal.gov:8080/TestCI/app
report_logs_extra =



### workflows ###
[GlideinWMS]
experiment       = GlideinWMS
qualifier        = ${TEST_QUALS:-none}
revision         = ${TEST_REVISION:-develop}
#ci_test_lists    = quick_test
personality      = standard
#phases           = checkout_x_modules _report_checkout_x_modules _pylint_prepare_n pylint_x_branchs unit_test
phases           = checkout _report_checkout _pylint_prepare_n pylint_x_branchs unit_test_x_branchs
phases_to_report = pylint unit_test
#modules          = glideinwms
module          = glideinwms


### personalities ###
[standard]
# define what the phases, below, do:

# checkout_x_modules does this for each $module in $modules
checkoutdir = ${WORKSPACE}
checkoutcmd = git clone http://cdcvs.fnal.gov/projects/$module && cd $module && git checkout branch_v3_2_jenkins

# report_checkout:
_report_checkoutdir = ${WORKSPACE}
_report_checkoutcmd = mdir=`echo $module | tr - _` && (cd $mdir && module_repourl_git $module)

# _pylint_prepare_n:
_pylint_prepare1 = check_br="branch_v3_2 branch_v3_2_jenkins master"
_pylint_prepare2 = branches=`cd ${WORKSPACE}/${module}; git log --all --oneline --since="1 weeks ago" --pretty=format:%d | sort | uniq | grep origin | tr -d "(" | tr -d ")"`
_pylint_prepare3 = for b in $branches; do br=`echo $b | grep origin | grep -v HEAD | tr -d "," | sed -e "s|origin/||g"`; [ -n $br ] && check_br="$check_br $br"; done
#_pylint_prepare4 = branchs=`echo $check_br | xargs -n1 | sort -u | xargs | tr " " ","`
_pylint_prepare4 = branchs=`echo $check_br | xargs -n1 | sort -u | xargs`
_pylint_prepare5 = echo "branchs: ${branchs}"
_pylint_prepare6 = for br in ${branchs}; do echo ${br} ${br//\//-}; cp -a ${WORKSPACE}/${module} ${WORKSPACE}/${module}_${br//\//-}; cd ${WORKSPACE}/${module}_${br//\//-}; git checkout ${br}; git branch; git status; done

# pylint:
pylintsetup  = echo -e "\nbranchs: ${branchs} - branch: ${branch}\n"
pylintdir    = ${WORKSPACE}
pylintcmd    = echo -e "\n${branch} ${branch//\//-}\n"; export GLIDEINWMS_SRC=${WORKSPACE}/${module}_${branch//\//-} && run_pylint.sh $branch
pylintreport =  cat ${BUILD_NUMBER}/mail.results
#pylintreport =  sed -n "/---/,/---/p ; /===/,/===/p ; /Switched/p" $f

# unit_test:
unit_testsetup  = echo -e "\nbranchs: ${branchs}\nbranch: ${branch}\n"
unit_testdir    = ${WORKSPACE}
unit_testcmd    = echo -e "\n${branch} ${branch//\//-}\n"; export GLIDEINWMS_SRC=${WORKSPACE}/${module}_${branch//\//-} && run_unittests.sh test_frontend.py test_frontend_element.py test_cleanupSupport.py test_condorExe.py test_encodingSupport.py test_glideFactoryDowntimeLib.py test_glideinFrontendPlugins.py test_tarSupport.py test_logSupport.py 2>&1
unit_testreport = junit_test_email_report.sh ${module}_*/unittests/unittests-reports/; cat junit_test_email.report
#unit_testreport = curl -s "https://buildmaster.fnal.gov/job/${module}_ci/${BUILD_NUMBER}/label_exp=${label_exp},label_exp2=${label_exp2}/testReport/(root)/" -o GlideinWMS_UnitTest.html ;echo "cat //body/div[@id=\"page-body\"]/div[@id=\"main-panel\"]" | xmllint --html --shell GlideinWMS_UnitTest.html > GlideinWMS_UnitTest_attach.html ;  sed -i "s/&Acirc;//g ; s/<img[^>]*[^>]*>//g ; s/^\/ >.*//g" GlideinWMS_UnitTest_attach.html  ; cat GlideinWMS_UnitTest_attach.html
