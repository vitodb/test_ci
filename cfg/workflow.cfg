# main config lists section to get personalty from
[default]
workflow                  = ${TEST_WORKFLOW:-TEST_CI_MRB}
notify_email_to           = mfattoru@fnal.gov
notify_succeeded_email_to =
notify_success            = true
notify_warning_email_to = mfattoru@fnal.gov
notify_failed_email_to    = mfattoru@fnal.gov
notify_blame              = false
proxy_vo                 = /fermilab/uboone
email_extra               =
build_db_uri              = http://dbweb6.fnal.gov:8080/TestCI/app
#logsize_limit             = 20
report_logs_extra         =


### workflows ###
[TEST_CI_MRB_BACKUP]
experiment    = DUNE
qualifier     = ${TEST_QUALS:-e10:prof}
revision      = ${TEST_REVISION:-develop}
ci_test_lists = quick_test_ProtoDUNE_test_abc
personality   = MRB
proxy_flag    = true
phases        = _eval_n checkout_x_modules _report_checkout_x_modules build unit_test install _count_citests _count_running_citests ci_tests
skip_phases   = PhaseToSkip@d14 PhaseToSkip@d15
modules       = dunetpc


### workflows ###
[TEST_CI_MRB]
experiment    = DUNE
qualifier     = ${TEST_QUALS:-e10:prof}
revision      = ${TEST_REVISION:-develop}
ci_test_lists = quick_test_ProtoDUNE_test_abc
personality   = MRB
proxy_flag    = true
phases        = _eval_n fast_checkout _count_citests _count_running_citests ci_tests
skip_phases   = PhaseToSkip@d14 PhaseToSkip@d15 *@d14
modules       = dunetpc


[TEST_CI_MRB_GEN_REF_FILES]
experiment    = DUNE
qualifier     = ${TEST_QUALS:-e10:prof}
revision      = ${TEST_REVISION:-develop}
ci_test_lists = quick_test_ProtoDUNE_test
personality   = MRB
proxy_flag    = true
phases        = _eval_n checkout_x_modules _report_checkout_x_modules build unit_test install _count_citests _count_running_citests gen_ref_files ci_tests rename_ref_files
skip_phases   = rename_ref_files@d14 rename_ref_files@d15
modules       = dunetpc
ci_exp_code   = DUNETPC

[TEST_CI_GRID_UBOONE]
experiment    = uBooNE
qualifier     = ${TEST_QUALS:-e10:prof}
revision      = ${TEST_REVISION:-develop}
ci_test_lists = quick_test_uboonecode
personality   = mrb
proxy_flag    = true
phases        = _eval_n checkout_x_modules _report_checkout_x_modules build unit_test install _count_citests _count_running_citests ci_tests _tar_code ci_tests_grid
skip_phases   = _tar_code@d14 _tar_code@d15 ci_tests_grid@d14 ci_tests_grid@d15
grid_cfg      = ${TEST_GRIDWFCFG:-cfg/grid_workflow.cfg}
modules       = uboonecode

### personalities ###
[MRB]
# define what the stages, below, do:
# eval_n:
_eval1 = source /cvmfs/dune.opensciencegrid.org/products/dune/setup_dune.sh || source /grid/fermiapp/products/dune/setup_dune.sh; export PRODUCTS=${PRODUCTS}:/grid/fermiapp/products/common/db:/grid/fermiapp/products/lariat:/grid/fermiapp/products/argoneut
_eval2 = . `ups setup ups`
_eval3 = PRODUCTS=`dropit -D -E -p $PRODUCTS:/grid/fermiapp/products/uboone:/cvmfs/oasis.opensciencegrid.org/microboone/products:/cvmfs/uboone.opensciencegrid.org/products`
_eval4 = TEST_QUALS="${qualifier}"
_eval5 = `mrb newDev -f -v ${proj_PREFIX}_ci -q $TEST_QUALS | grep source`
_eval6 = source ${MRB_DIR}/bin/mrbSetEnv
_eval7 = export temporary_build_identifier=$( echo -`date +%Y%m%d%H%M` ) ; export build_platform=$( echo -`platform` )


# fast_checkout
fast_checkoutdir = ${MRB_SOURCE}
fast_checkoutcmd = source /cvmfs/dune.opensciencegrid.org/products/dune/setup_dune.sh && setup dunetpc v06_19_00 -q e10:prof ;


# checkout_x_modules does this for each $module in $modules
checkoutdir = ${MRB_SOURCE}
checkoutcmd = mdir=`echo $module | tr - _` && mrb g -r -d $mdir -b `match_args $module "$TEST_REVISION,*@develop"` $module


# report_checkout:
_report_checkoutdir = ${MRB_SOURCE}
_report_checkoutcmd = mdir=`echo $module | tr - _` && (cd $mdir && module_repourl_git $module)


# build:
buildsetup  = echo ==========; mrbsetenv ; echo ==========; setup ninja v1_6_0a
builddir    = ${MRB_BUILDDIR}
buildcmd    = mrbsetenv && mrb b -j `getconf _NPROCESSORS_ONLN` --generator ninja


# unit_test:
# for the moment, we ignore failures so we can test the ci phase on MacOS
unit_testdir     = ${MRB_BUILDDIR}
unit_testcmd     = mrb test --sc  -j`getconf _NPROCESSORS_ONLN` --generator ninja
unit_testreport  = sed -n -e "/%/,\$p" $f

# install:
installdir     = ${MRB_TOP}
installcmd     = mrb i --sc --generator ninja

# count_citests:
_count_citestsdir   = ${MRB_TOP}
_count_citestssetup = mrbslp
_count_citestscmd   = echo -e "List of available CI tests:\n`test_runner -l`" ; echo "#Available-CI-tests: "`test_runner -l | grep -Ev "^suite |Tests in no suites" | sort | uniq | wc -l`


# count_running_citests:
_count_running_citestsdir   = ${MRB_TOP}
_count_running_citestssetup = mrbslp
_count_running_citestscmd   = echo -e "List of running CI tests:\n`test_runner -e ${TEST_TESTS:-default}`" ; echo "#Running-CI-tests: `test_runner -C ${TEST_TESTS:-default}`"

# gen_ref_files:
gen_ref_filesdir    = ${MRB_TOP}
gen_ref_filessetup  = mrbslp ; export build_identifier=${temporary_build_identifier}
gen_ref_filescmd    = test_runner -v -u --statistics quick_test_ProtoDUNE_sequential_test
gen_ref_filesreport = cat $f | tail -n 150

# ci_tests:
ci_testsdir    = ${MRB_TOP}
ci_testssetup  = mrbslp
ci_testscmd    = test_runner -v --statistics ${TEST_TESTS:-default}
ci_testsreport = p="Test|Start|passed.*out.of|error:|ERROR:|FAILED:" ; cat $f | egrep "$p" | tail -n 150

# rename_ref_files:
rename_ref_filesdir    = ${MRB_TOP}
rename_ref_filescmd    = rename_reference_files
#rename_ref_filesreport =

# tar_code
_tar_codedir  = ${WORKSPACE}
_tar_codecmd  = moduleVers=`match_args uboonecode "${TEST_REVISION//\//_}"` && /usr/bin/time tar zcf uboonecode.${moduleVers:-develop}.${TEST_QUALS//:/_}.tar.gz -C ${MRB_TOP} $(basename ${MRB_TOP}/localProducts_*) &&  /usr/bin/time tar zcf ci_modules.tar.gz -C ${WORKSPACE} generic_ci ${proj_PREFIX}_ci

# ci_tests_grid
ci_tests_griddir    = ${WORKSPACE}
ci_tests_gridsetup  = echo -e "\n\n"; myproxy-info -s myproxy.fnal.gov -vd
ci_tests_gridcmd    = moduleVers=`match_args uboonecode "${TEST_REVISION//\//_}"` && submit_jobs.sh --group uboone --role Analysis --code-tarball uboonecode.${moduleVers:-develop}.${TEST_QUALS//:/_}.tar.gz --ci-tarball ci_modules.tar.gz
ci_tests_gridreport = sed  -e "/Submitting grid jobs/p ; 1,/Submitting grid jobs/d" $f
ci_tests_gridsort   = id
